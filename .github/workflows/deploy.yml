on:
  push:
    branches:
      - master
      - develop
env:
  S3_BUCKET_NAME: potato-velog-sunjo
  PROJECT_NAME: deploy

name: deploy to ec2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create auth.yml file
        env:
          KAKAO_AUTH_CLIENT_KEY: ${ secrets.KAKAO_AUTH_CLIENT_KEY }
          KAKAO_AUTH_GRANT_TYPE: ${ secrets.KAKAO_AUTH_GRANT_TYPE }
          KAKAO_AUTH_URL: ${ secrets.KAKAO_AUTH_URL }
          KAKAO_AUTH_USER_INFO_URL: ${ secrets.KAKAO_AUTH_USER_INFO_URL }
          RESOURCE_FILE: velog_backend/src/main/resources/auth.properties
        run: |
          touch $RESOURCE_FILE
          echo "kakao.auth.client_key=$KAKAO_AUTH_CLIENT_KEY \
                kakao.auth.grant_type=$KAKAO_AUTH_GRANT_TYPE \
                kakao.auth.url=$KAKAO_AUTH_URL \
                kakao.auth.user_info_url=$KAKAO_AUTH_USER_INFO_URL" >> $RESOURCE_FILE

      - name: Create credentials.yml file
        env:
          CLOUD_AWS_CREDENTIALS_ACCESS_KEY: ${ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }
          CLOUD_AWS_CREDENTIALS_SECRET_KEY: ${ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }
          RESOURCE_FILE: velog_backend/src/main/resources/credentials.properties
        run: |
          touch $RESOURCE_FILE
          echo "cloud.aws.credentials.accessKey=$CLOUD_AWS_CREDENTIALS_ACCESS_KEY \
                cloud.aws.credentials.secretKey=$CLOUD_AWS_CREDENTIALS_SECRET_KEY" >> $RESOURCE_FILE

      - name: Create jwt.yml file
        env:
          JWT_SECRET: ${ secrets.JWT_SECRET }
          RESOURCE_FILE: velog_backend/src/main/resources/jwt.properties
        run: |
          touch $RESOURCE_FILE
          echo "jwt.secret=$CLOUD_AWS_CREDENTIALS_ACCESS_KEY" >> $RESOURCE_FILE

      - name: Create rds.yml file
        env:
          RDS_URL: ${ secrets.RDS_URL }
          RDS_USERNAME: ${ secrets.RDS_USERNAME }
          RDS_PASSWORD: ${ secrets.RDS_PASSWORD }
          RESOURCE_FILE: velog_domain/src/main/resources/rds.properties
        run: |
          touch $RESOURCE_FILE
          echo "spring.config.activate.on-profile=prod
                spring.datasource.hikari.jdbc-url=$RDS_URL \
                spring.datasource.hikari.driver-class-name=org.mariadb.jdbc.Driver \
                spring.datasource.hikari.username=$RDS_USERNAME \
                spring.datasource.hikari.password=$RDS_PASSWORD \
                spring.jpa.database-platform: org.hibernate.dialect.MariaDB103Dialect" >> $RESOURCE_FILE

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew build -Pprofile=prod

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload S3
        env:
          AWS_ACCESS_KEY_ID: ${ secrets.AWS_ACCESS_KEY_ID }
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          ./velog_backend/build/libs/*.jar s3://$S3_BUCKET_NAME/$PROJECT_NAME
#      - name: scp linux server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          source: ./velog_backend/build/libs/*.jar
#          target: "/root/jar"

